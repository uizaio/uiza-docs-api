## Get Regions

> REQUEST

```shell
curl -X GET \
  '<%= config[:endpoint] %>/live/region' \
  -H 'Authorization: <%= config[:token] %>'
```

```ruby
require "uiza"

Uiza.authorization = "<%= config[:token] %>"

begin
  region = Uiza::Live.get_regions
  puts live.SINGAPORE
rescue Uiza::Error::UizaError => e
  puts "description_link: #{e.description_link}"
  puts "code: #{e.code}"
  puts "message: #{e.message}"
rescue StandardError => e
  puts "message: #{e.message}"
end
```

```python
import uiza

from uiza.api_resources.live import Live
from uiza.exceptions import ServerException

uiza.authorization = "<%= config[:token] %>"

try:
  res, status_code = Live().get_regions()

  print("res: ", res)
except ServerException as e:
  raise e
except Exception as e:
  raise e
```

```php
<?php
require __DIR__."/../vendor/autoload.php";

Uiza\Base::setAuthorization("<%= config[:token] %>");

try {
  $regions = Uiza\Live::getRegions();

  print_r($regions);
} catch(\Uiza\Exception\ErrorResponse $e) {
  print($e);
}
?>
```

```java
import java.util.*;
import com.google.gson.*;

import io.uiza.Uiza;
import io.uiza.exception.*;
import io.uiza.model.Live;
import io.uiza.model.Live.*;

public class Main {

  public static void main(String[] args) {
    Uiza.authorization = "<%= config[:token] %>";

    try {
      JsonObject response = Live.getRegions();
      System.out.println(response);
    } catch (UizaException e) {
      System.out.println("Status is: " + e.getStatusCode());
      System.out.println("Message is: " + e.getMessage());
      System.out.println("Description link is: " + e.getDescriptionLink());
    } catch (Exception e) {
      System.out.println(e);
    }
  }
}
```

```javascript
const uiza = require('uiza');

uiza.authorization('<%= config[:token] %>');

uiza.live.get_regions()
  .then((res) => {
    //Identifier of live event has been retrieved
  }).catch((err) => {
    //Error
  });
```

```go
import (
  uiza "github.com/uizaio/api-wrapper-go"
  "github.com/uizaio/api-wrapper-go/live"
)

func init() {
  uiza.Authorization = "<%= config[:token] %>"
}

response, err := live.GetRegions()
if err != nil {
  log.Printf("%v\n", err)
} else {
  log.Printf("%v\n", response)
}
```

```csharp
using System;
using Uiza.Net.Configuration;
using Uiza.Net.Enums;
using Uiza.Net.Parameters;
using Uiza.Net.Services;

UizaConfiguration.SetupUiza(new UizaConfigOptions
{
  Authorization = "<%= config[:token] %>"
});

try
{
  var result = UizaServices.Live.GetRegions();
  Console.WriteLine(string.Format("Get Region = {0} Success", result.Data.SINGAPORE));
  Console.ReadLine();
}
catch (UizaException ex)
{
  Console.WriteLine(ex.Message);
  Console.ReadLine();
}
```

Retrieves the details of an existing event. You need only provide the unique identifier of event that was returned upon Live event creation.

> RESPONSE

```json
{
	"SINGAPORE": "ap-southeast-1",
	"VIETNAM": "vn-southeast-1",
	"GOOGLECLOUD": "asia-southeast1"
}
```

**HTTP Request**

<span class="get-button"> GET </span>
```<%= config[:endpoint] %>/live/region```


**ARGUMENTS**

None

**RETURNS**

A list of regions with its value. The key can be used as `region` input to create live events.
